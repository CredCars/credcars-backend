name: Deploy CredCars Full Stack

# Trigger on push to main or manual run
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the repo
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Set up SSH
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SERVER_SSH_KEY }}

      # 3. Deploy Backend
      - name: Deploy Backend
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@54.235.43.222 << 'EOF'
            set -e
            echo "=== Deploying Backend ==="
            cd /home/ubuntu/credcars-backend

            # Pull latest code
            git pull origin main

            # Optional: clean unused Docker objects to free space
            docker system prune -af || true

            # Build and start backend service
            docker-compose up -d --build backend

            echo "Backend deployment done!"
          EOF

      # 4. Deploy Frontend
      - name: Deploy Frontend
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@54.235.43.222 << 'EOF'
            set -e
            echo "=== Deploying Frontend ==="
            cd /home/ubuntu/credcars-frontend

            # Pull latest code
            git pull origin main

            # Clean npm cache to avoid disk space issues
            rm -rf /home/ubuntu/.npm

            # Install dependencies and build
            npm ci --omit=dev --unsafe-perm --no-audit --no-fund
            npm run build

            # Backup current deployment
            mv /var/www/app/dist /var/www/app/dist.bak || true

            # Deploy new build
            rm -rf /var/www/app/dist
            cp -r dist /var/www/app/

            # Fix permissions
            chown -R ubuntu:www-data /var/www/app/dist
            chmod -R 755 /var/www/app/dist

            # Reload Nginx
            systemctl reload nginx

            echo "Frontend deployment done!"
          EOF
