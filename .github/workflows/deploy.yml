name: Deploy CredCars Full Stack

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Set up SSH for server
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SERVER_SSH_KEY }}

      # 3. Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 4. Build Docker image and push to Docker Hub
      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/credcars-backend:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/credcars-backend:latest

      # 5. Deploy Backend on server
      - name: Deploy Backend
        run: |
          ssh -T -o StrictHostKeyChecking=no ubuntu@54.235.43.222 << 'EOF'
          set -e
          echo "=== Deploying Backend ==="
          cd /home/ubuntu/credcars-backend

          # Pull latest image from Docker Hub
          docker pull ${{ secrets.DOCKER_USERNAME }}/credcars-backend:latest

          # Stop old container (if exists)
          docker stop credcars-backend || true
          docker rm credcars-backend || true

          # Start new container
          docker run -d --name credcars-backend -p 3000:3000 \
            -e NODE_ENV=production \
            ${{ secrets.DOCKER_USERNAME }}/credcars-backend:latest

          echo "Backend deployment done!"
          EOF

      # 6. Deploy Frontend on server
      - name: Deploy Frontend
        run: |
          ssh -T -o StrictHostKeyChecking=no ubuntu@54.235.43.222 << 'EOF'
          set -e
          echo "=== Deploying Frontend ==="
          cd /home/ubuntu/credcars-frontend

          git pull origin main
          npm ci --omit=dev --unsafe-perm --no-audit --no-fund
          npm run build

          mv /var/www/app/dist /var/www/app/dist.bak || true
          rm -rf /var/www/app/dist
          cp -r dist /var/www/app/

          chown -R ubuntu:www-data /var/www/app/dist
          chmod -R 755 /var/www/app/dist

          systemctl reload nginx
          echo "Frontend deployment done!"
          EOF
