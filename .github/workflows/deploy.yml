name: Deploy CredCars Full Stack

# Trigger workflow on push to main AND manually
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the repo
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Set up SSH
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SERVER_SSH_KEY }}

      # 3. Deploy Backend
      - name: Deploy Backend
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@54.235.43.222 << 'EOF'
            set -e

            echo "=== Deploying Backend ==="
            cd /home/ubuntu/credcars-backend

            # Ensure server is in sync
            git fetch origin main
            git reset --hard origin/main

            # Build and start new container
            docker compose build
            docker compose up -d --no-deps --build backend_new

            # Wait for healthcheck
            for i in {1..12}; do
              STATUS=$(docker inspect --format='{{.State.Health.Status}}' credcars-backend_new)
              if [ "$STATUS" == "healthy" ]; then
                echo "Backend healthy, swapping containers..."
                docker stop credcars-backend || true
                docker rename credcars-backend_new credcars-backend
                break
              fi
              sleep 5
            done

            echo "Backend deployment done!"
          EOF

      # 4. Deploy Frontend
      - name: Deploy Frontend
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@54.235.43.222 << 'EOF'
            set -e

            echo "=== Deploying Frontend ==="
            cd /home/ubuntu/credcars-frontend

            git fetch origin main
            git reset --hard origin/main

            npm install
            npm run build

            # Backup current deployment
            mv /var/www/app/dist /var/www/app/dist.bak || true

            # Deploy new build
            rm -rf /var/www/app/dist
            cp -r dist /var/www/app/

            # Fix permissions
            chown -R ubuntu:www-data /var/www/app/dist
            chmod -R 755 /var/www/app/dist

            # Reload Nginx
            systemctl reload nginx

            echo "Frontend deployment done!"
          EOF
